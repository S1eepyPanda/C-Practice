/*
 * Операции C#
 * По приоритету сверху вниз:
 * . - Доступ к элементу
 * x() - вызов метода или делегата
 * x[] - доступ к элементу по индексу
 * ==x, --x - Префексный инкремент/декремент
 * new - Выделение памяти
 * typeof - Получение типа
 * checked - Проверяемый код
 * unchecked - Непроверяемый код
 *--------------------------------------------
 * + - Унарный плюс
 * - - Арифметическое отрицание
 * ! - Логическое отрицание
 * ~ - Поразрядное отрицание
 * (тип (ex. int)) x - Преобразование типа
 * -------------------------------------------
 * * - Умножение
 * (/. %) - Без скобочек деление /Остаток от деления
 * -------------------------------------------
 * << - Сдвиг влево
 * >> - Сдвиг вправо
 * -------------------------------------------
 * < 
 * >
 * <=
 * >=
 * is - Проверка приндлежности типу
 * as - Приведение типа
 * -------------------------------------------
 * ==
 * !=
 * -------------------------------------------
 * & - Поразрядное И
 * ^ - Поразрядное исключающее ИЛИ
 *| - Поразрядное ИЛИ
 *--------------------------------------------
 *&& - Логическое И
 *--------------------------------------------
 *|| - Логическое ИЛИ
 *--------------------------------------------
 *?: - Условная операция
 *--------------------------------------------
 *= 
 **=
 *(/=)
 *%=
 *+=
 *-=
 *<<=
 *>>=
 *&=
 *^=
 *|=
 *--------------------------------------------
 *X++, X--
 *--------------------------------------------
 *Math.Abs() - модуль
 *Math.Ceiling() - Округление для большего целого
 *Math.Cos() - Косинус
 *Math.E - число Е
 *Math.Exp() - Экспонента
 *Math.Floor() - Округление до меньшего целого
 *Math.Log() - Натуральный логарифм
 *Math.Log10() - Десятичный логарифм
 *Math.Max(x,y) - Максимум из двух значений
 *Math.Min(x,y) - Минимум из двух значений
 *Math.Pi
 *Math.Pow(x,y) - Возведение в степень
 *Math.Round() - Простое округление
 *Math.Sign() - Знак числа
 *Math.Sin() - Синус
 *Math.Sqrt() - Квадратный корень
 *Math.Tan - Тангенс
 */
using System;
using System.Text;
namespace Myapp
{
    internal class Program
    {
        public static void Main()
        {
            int p;
            int side;
            int number;
            int pal;
            int result = 0;
           for (int i = 0; i < 3; i++) { 
                string method = Console.ReadLine();
                switch (method)
                {
                    case "1":
                        {
                            p = int.Parse(Console.ReadLine());
                            p = p / 2;
                            side = p / 3;
                            Console.WriteLine(Math.Round(Math.Sqrt(p * (3 * (p - side)))));
                            break;
                        }
                    case "2":
                        {
                            number = int.Parse(Console.ReadLine());
                            number = number % 2;
                            if (number == 0) 
                            {
                                Console.WriteLine("Чётное");
                            } else
                            {
                                Console.WriteLine("Нечётное");
                            }
                            break;
                        }
                    case "3":
                        {
                            pal = int.Parse(Console.ReadLine());
                            result += (100*(pal % 10));
                            result += (10*((pal%100)/10));
                            result += (pal / 100);
                            Console.WriteLine(result);
                            result = 0;
                            break;
                        }
                }
            }
        }
    }
}